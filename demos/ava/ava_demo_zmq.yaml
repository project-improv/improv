# settings:
  # use_watcher: [Acquirer, Processor, Analysis, Visual]

actors:
  Acquirer:
    package: actors.zmq_acquire_deque
    class: ZMQAcquirer
    # n_segs: 447 # for 120 ms segments (weird, Fig 6 = 2 min data x 60 s x 1000 ms = 120000 ms = 1000 segments)
    # folder: /home/eao21/improv/demos/ava/blu291/v3/audio/66/blu291_43532.29693000_03_08_08_14_53/20 # exclude data/blu285/v1/original_data/DIR/birdname_130519_103325.4.wav for embedding new, fit UMAP on 100,000 120 ms (or 60, 120, 180, 240...test min...20 ms - Fig 6 supplement 1 plots)
    sub_ip: 10.122.168.184
    sub_port: 5555
    fs: 32000
    win_dur: 20
    time_opt: True
    timing:
      - in_timestamps
      - zmq_acq_total_times
      - zmq_timestamps
      - get_data
      - put_to_store
      - put_out_time
    out_path: zmq_4/improv/output/timing/

  Processor:
    package: actors.zmq_processor
    class: AudioProcessor
    # n_segs: 50 # for 120 ms segments (weird, Fig 6 = 2 min data x 60 s x 1000 ms = 120000 ms = 1000 segments)
    model_path: blu291/models/v4/checkpoint_300.tar # check squeeze/unsqueeze
    # from finch_window_mwe and paper
    fs: 32000
    params:
      fs: 32000
      num_freq_bins: 128
      num_time_bins: 128
      min_freq: 400
      max_freq: 10000
      win_len: 0.02 # 120 ms segments of audio
      nperseg: 256
      noverlap: 128
      max_dur: 0.02
      spec_min_val: 3.0 # minimum STFT log-modulus
      spec_max_val: 8.0 # maximum STFT log-modulus
      mel: True # spaced between 0.4 - 10 kHz, check implementation
      within_syll_normalize: False
      time_stretch: False
      # fps: 30
      # shoulder: 0.01
      # shoulder_spec: True
      save_spec: True
      save_latent: True
      save_stft: True
    gpu: True
    gpu_num: 0
    spec_latent_movie: False
    time_opt: True
    timing:
      - proc_timestamps
      - get_wav_out
      - get_spec
      - spec_to_store
      - to_device
      - inference_time
      - z_to_np
      - z_to_store
      - put_q_out
      - proc_total_times
    out_path: zmq_4/improv/output
    method: fork
  
  # Analysis:
  #   package: actors.analysis
  #   class: VAEAnalysis

  # Visual:
  #   package: actors.visual
  #   class: AVAVisual
  #   out_oath: output/plots

connections:
  Acquirer.q_out: [Processor.q_in]
  # Acquirer.q_out: [Processor.q_in, Visual.q_audio]
  # Processor.q_out: [Visual.q_in]
  # Processor.q_out: [Analysis.q_in]
  # Analysis.q_out: [Visual.q_in]