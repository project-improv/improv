name: Python testing

on:
  pull_request: 
    branches:
      - master
      - dev
  push:
    branches:
      - master
      - dev

jobs:
  test:

    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest] # [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build
      - name: Install package (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pip install -e .[tests,lint] --no-binary pyzmq
      - name: Install package (Mac)
        if: startsWith(matrix.os, 'macos')
        run: |
          pip install -e .[tests] 
      - name: Install package (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          pip install -e .[tests] 
          
      - name: Test with pytest
        run: |
          python -m pytest --cov=improv 

      - name: Coveralls
        uses: coverallsapp/github-action@v2


  check-format:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Test with Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install package (Ubuntu)
        run: |
          pip install -e .[lint] --no-binary pyzmq

      - name: Check format with Black
        uses: psf/black@stable

      - name: Check format with flake8
        run: |
          pip install flake8
          flake8 

