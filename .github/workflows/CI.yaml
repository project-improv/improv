name: Python testing

on:
  pull_request: 
    branches:
      - master
      - dev
  push:
    branches:
      - master
      - dev

jobs:
  test:

    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9"] #["3.7", "3.8", "3.9", "3.10"]
        os: [windows-latest] # [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Setup WSL (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: Vampire/setup-wsl@v2.0.1
        with:
          distribution: Ubuntu-22.04
          wsl-shell-command: bash
      - name: Setup Python on WSL
        if: startsWith(matrix.os, 'windows')
        shell: wsl-bash {0}
        run: | 
          cd /home
          pwd
          sudo apt-get update -y
          sudo apt-get install -y python3 
          sudo apt-get install -y python3-pip  
      - name: clone repo
        uses: actions/checkout@v3
        env: 
          GITHUB_WORKSPACE: "/home"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build
      - name: Install package (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pip install -e .[tests,lint] --no-binary pyzmq
      - name: Install package (Mac)
        if: startsWith(matrix.os, 'macos')
        run: |
          pip install -e .[tests] 
      - name: Install package (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: wsl-bash {0}
        run: |
          pip install --upgrade pip
          pip install build
          pip install flake8 pytest
          pip install -e .[tests] --no-binary pyzmq 
        env: 
          GITHUB_WORKSPACE: "/home"
          
      - name: Test with pytest (Mac)
        if: startsWith(matrix.os, 'macos')
        run: |
          # pytest -vv --cov=improv --ignore=test/test_tui.py --ignore=test/test_store_with_errors.py --ignore=test/test_runManager.py --ignore=test/test_link.py --ignore=test/test_nexus.py
      - name: Test with pytest (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pytest test/test_actor.py -vv --cov=improv 
      - name: Test with pytest (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: wsl-bash {0}
        run: |
          PATH=~/.local/bin:$PATH 
          plasma_store -s ./store_tmp -m 10000000
          pytest test/test_actor.py -vv --cov=improv -k "setStore" -s
      - name: Coveralls
        uses: coverallsapp/github-action@v2


  check-format:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install package (Ubuntu)
        run: |
          pip install -e .[lint] --no-binary pyzmq

      - name: Check format with Black
        uses: psf/black@stable

      - name: Check format with flake8
        run: |
          pip install flake8
          flake8 
